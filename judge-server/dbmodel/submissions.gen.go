// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package dbmodel

import (
	"time"
)

const TableNameSubmission = "Submissions"

// Submission mapped from table <Submissions>
type Submission struct {
	ID            int64     `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true" json:"id"`
	UserID        string    `gorm:"column:user_id;type:char(36);not null;index:idx_submissions_user_id,priority:1;index:idx_user_problem,priority:1" json:"user_id"`
	ProblemID     string    `gorm:"column:problem_id;type:char(36);not null;index:idx_problem_status,priority:1;index:idx_submissions_problem_id,priority:1;index:idx_user_problem,priority:2" json:"problem_id"`
	Code          string    `gorm:"column:code;type:text;not null" json:"code"`
	Language      string    `gorm:"column:language;type:varchar(20);not null" json:"language"`
	Status        string    `gorm:"column:status;type:varchar(50);index:idx_problem_status,priority:2;index:idx_submissions_status,priority:1;default:Pending" json:"status"`
	Score         int32     `gorm:"column:score;type:int" json:"score"`
	SubmittedAt   time.Time `gorm:"column:submitted_at;type:datetime;index:idx_submissions_submitted_at,priority:1;default:CURRENT_TIMESTAMP" json:"submitted_at"`
	ExecutionTime int32     `gorm:"column:execution_time;type:int" json:"execution_time"`
	MemoryUsed    int32     `gorm:"column:memory_used;type:int" json:"memory_used"`
	ErrorMessage  string    `gorm:"column:error_message;type:text" json:"error_message"`
}

// TableName Submission's table name
func (*Submission) TableName() string {
	return TableNameSubmission
}
